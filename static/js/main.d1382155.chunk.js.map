{"version":3,"sources":["components/Page.js","components/TabList.js","components/Home.js","components/Images.js","components/LightBoxModal.js","components/Photos.js","components/AnimationsTile.js","components/Animations.js","components/GameContent.js","components/Games.js","config.js","components/Message.js","components/GuestBookForm.js","components/GuestBook.js","components/MovieLightBoxModal.js","components/Movie.js","components/MovieList.js","components/CreateList.js","components/AddMovie.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["Page","addActiveClass","props","page","title","activeTab","pageTitle","this","onClick","changePage","bind","className","Component","TabList","renderedPages","pages","map","i","key","id","Home","src","href","target","images","description","LightBoxModal","makeVisible","imgClicked","document","getElementById","style","display","addClickListener","modal","addEventListener","e","currentTarget","thisImage","find","image","activeImage","thisImageSrc","thisImageDesc","verticalAlign","alt","Photos","state","changeActivePhoto","imageName","setState","imageGallery","AnimationsTile","videoLink","width","height","frameBorder","allowFullScreen","Animations","videoTiles","link","video","GameContent","imageSrc","header","desc","hours","Games","gameContents","imageSrcLink","game","config","apiKey","authDomain","databaseURL","Message","animated","msgDateTime","Date","msgDateTimeArr","toString","split","initials","msgName","initialsArr","length","charAt","toUpperCase","msgDesc","msgText","avatarColor","getId","backgroundColor","firebase","require","GuestBookForm","handleSubmit","firebaseData","formErrorName","formErrorMsg","event","preventDefault","data","FormData","console","log","formJson","forEach","value","setError","alert","database","ServerValue","TIMESTAMP","ref","push","set","apps","initializeApp","onSubmit","for","type","name","placeholder","maxLength","required","GuestBook","firstRender","on","snapshot","val","addAnimation","message","classList","add","setTimeout","remove","msgArr","Object","keys","viewable","reverse","renderedMsgs","msg","Math","floor","random","datetime","React","cloneElement","MovieLightBoxModal","allListNamesState","allListNames","thisMovieLists","getThisMovieLists","dropdown","thisMovieID","innerHTML","allLists","once","rerenderParentCallback","entries","window","onscroll","listID","listNamesRen","inLists","notInLists","includes","list","addToList","showDropdown","deleteThisMovie","Movie","wasClicked","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","scrollTo","poster","ratingIMDb","ratingRt","plot","director","runtime","moveLists","movieID","partOfLists","movieLists","Title","Poster","Director","imdbRating","Ratings","Value","Plot","Runtime","imdbID","MovieList","activeMovie","movieClicked","firebaseAllMovieData","lastKeyLoaded","numMovies","firebaseListNames","searchedKey","currentList","currentListName","allListNamesMap","changeActiveMovie","movieName","numChildren","orderByKey","limitToFirst","orderByChild","result","x","forceAll","innertext","forceUpdate","listNames","index","changeList","unshift","searchBtn","searchInput","found","toLowerCase","handleClick","getAllMovieIDs","movie","currPage","start","pastFireBaseData","startAt","newFireBaseData","getDropdownLists","searchMovies","loadMovies","loadMore","CreateList","lastInsert","inputData","smoltxt","color","limitToLast","listId","parseInt","toUpload","createList","axios","default","AddMovie","get","then","response","catch","error","addMovieEvent","Body","displayContent","App","displayTitle","toTop","body","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1382155.chunk.js","sourcesContent":["/* eslint-disable */ \r\nimport React, { Component } from 'react'\r\n\r\nexport default class Page extends Component {\r\n    addActiveClass = () => {\r\n        if (this.props.page.title === this.props.activeTab) {\r\n            return 'active'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const pageTitle = this.props.page.title;\r\n\r\n        return (\r\n            <li onClick={this.props.changePage.bind(this, this.props.page.title)} className={this.addActiveClass()}><a><span>{pageTitle}</span></a></li>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Page from './Page';\r\n\r\nexport class TabList extends Component {\r\n    render() {\r\n        /* how to do a console log in jsx: { console.log(this.props)} */\r\n        //console.log(this.props)\r\n        const renderedPages = this.props.pages.map((page, i) => (\r\n            <Page key={i} page={page} changePage={this.props.changePage} activeTab={this.props.activeTab}/>\r\n        ))\r\n        return (\r\n            <div id=\"nav-bar-div\" className=\"nav-bar\">\r\n\t\t\t<ul id=\"nav-bar-list\">\r\n                {renderedPages}\r\n            </ul>\r\n\t        </div>);\r\n    }\r\n}\r\n\r\nexport default TabList;","/* eslint-disable */ \r\nimport React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"main-body\">\r\n\t\t\t<div>\r\n\t\t\t\t<img src=\"images/profile.jpg\" className=\"profile-img\"/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tHi my name is Jayleen and I am a junior at UC Santa Barbara. Since I already made a <a href=\"http://jayleenli.github.io\" target=\"_blank\">professional portfolio</a> I decided to have more fun with this portfolio for CS 185. :) \r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tOutside of school/coding things I like playing video games, watching anime or YouTube animations, and obessessing over korean girl groups. \r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n        )\r\n    }\r\n}\r\n","const images = [\r\n    { src: 'images/kimbap.jpg', title: 'kimbap', description: 'Made some kimbap during quarantine!' },\r\n    { src: 'images/spam_musubi.jpg', title: 'spam_musubi', description: 'Made some spam musubis during quarantine!' },\r\n    { src: 'images/seaturtles.jpg', title: 'seaturtles', description: 'Some sea turtles I saw on a Hawaiian beach.' },\r\n    { src: 'images/stickers.jpg', title: 'stickers', description: 'I like stickers a lot and these are some of my recent additions to my collection I got from campus fundraisers.' },\r\n    { src: 'images/stickers2.jpg', title: 'stickers2', description: 'Stickers I got from Twitchcon! The Nezuko one is great' },\r\n    { src: 'images/soap.jpg', title: 'soap', description: 'Carved this out of soap when I was bored.' },\r\n    { src: 'images/soap2.jpg', title: 'soap2', description: 'Carved this out of soap when I was bored.' },\r\n    { src: 'images/dontdead.jpg', title: 'dontdead', description: 'At universal studios!' },\r\n    { src: 'images/viet_coffee.jpg', title: 'viet_coffee', description: 'Definitely not a coffee addict.' },\r\n    { src: 'images/chicago_airport.jpg', title: 'chicago_airport', description: 'Chicago airport has this really cool underground bridge!' },\r\n    { src: 'images/takoyaki.jpg', title: 'takoyaki', description: 'Delicious takoyaki :)' },\r\n    { src: 'images/tattoo.jpg', title: 'tattoo', description: 'A \"tattoo\" my roomate drew on me' },\r\n    { src: 'images/tattoo2.jpg', title: 'tattoo2', description: 'Another \"tattoo\" of a great meme.' },\r\n    { src: 'images/tattoo3.jpg', title: 'tattoo3', description: 'Another \"tattoo\" of a great meme.' },\r\n    { src: 'images/doggo.jpg', title: 'doggo', description: 'A dog at my workplace!' },\r\n    { src: 'images/cat.jpg', title: 'cat', description: 'Cat cafe in Santa Barbara got those cute cats.' },\r\n    { src: 'images/twitchcon.jpg', title: 'twitchcon', description: 'Took a picture with a random twich streamer... I thought she was lily pichu but she was one of her friends... still cool!' },\r\n    { src: 'images/twitchcon2.jpg', title: 'twitchcon2', description: 'GAME OF KEYBOARDS' },\r\n    { src: 'images/twitchcon3.jpg', title: 'twitchcon3', description: 'Another twitchcon picture!' },\r\n    { src: 'images/turtle_collection.jpg', title: 'turtle_collection', description: 'I like collecting turtles in my free time, definitely not a problem...' },\r\n    { src: 'images/portal_cube.jpg', title: 'portal_cube', description: 'I made this portal cube for my friend!' },\r\n    { src: 'images/ditto.jpg', title: 'ditto', description: 'I like the ditto pokemon plushie series...' },\r\n    { src: 'images/candle.jpg', title: 'candle', description: 'Made this candle in Santa Cruz!' },\r\n    { src: 'images/kcon.jpg', title: 'kcon', description: 'Saw my queens MAMAMOO at Kcon 2019 <3' },\r\n    { src: 'images/doggo2.jpg', title: 'doggo2', description: 'A doggo at work!' },\r\n    { src: 'images/doggo3.jpg', title: 'doggo3', description: 'Another doggo at work!' },\r\n    { src: 'images/mac.jpg', title: 'mac', description: 'A original Apple Mac someone brought into work!' },\r\n    { src: 'images/banana_slug.jpg', title: 'banana_slug', description: 'Banana slugs!' },\r\n    { src: 'images/squirtle.jpg', title: 'squirtle', description: 'Tried to make a squirtle from the squirtle squad with polymer clay LOL' },\r\n    { src: 'images/turtles.jpg', title: 'turtles', description: 'Turtles at the UCSB pond!' },\r\n    { src: 'images/avocados.jpg', title: 'avocados', description: 'I have these avocado plushies and I made the rightmost one out of felt to continue the chain :D' },\r\n    { src: 'images/boba.jpg', title: 'boba', description: 'Cool boba flavors at a boba shop in LA!' },\r\n    { src: 'images/tjturtle.jpg', title: 'tjturtle', description: 'Just a normal Sunday watching fishing videos with my turtle.' },\r\n    { src: 'images/turtlepenguin.jpg', title: 'turtlepenguin', description: 'Some more felt creations I made.' }\r\n  ];\r\n  \r\n  export default images;","/* eslint-disable */ \r\nimport React, { Component } from 'react'\r\nimport images from './Images'\r\n\r\nexport default class LightBoxModal extends Component {\r\n    makeVisible = () => {\r\n        if (this.props.imgClicked) {\r\n            //console.log(\"imgClicked\");\r\n            var modal = document.getElementById(\"lightbox-modal\");\r\n            modal.style.display = \"flex\";\r\n        }\r\n    }\r\n\r\n    addClickListener = () => {\r\n        var modal = document.getElementById(\"lightbox-modal\");\r\n        if (modal) {\r\n            modal.addEventListener(\"click\", e=>{\r\n                //console.log(e.target);\r\n                //console.log(e.currentTarget);\r\n                if(e.target !== e.currentTarget)\r\n                    return;\r\n                modal.style.display = \"none\";\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const thisImage = images.find((image) => image.title === this.props.activeImage)\r\n        var thisImageSrc = null;\r\n        var thisImageDesc = null;\r\n\r\n        if (thisImage) {\r\n            thisImageSrc = thisImage.src\r\n            thisImageDesc = thisImage.description\r\n        }\r\n        if (!thisImageSrc) {\r\n            //default first image\r\n            thisImageSrc = images[0].src\r\n            thisImageDesc = images[0].description\r\n        }\r\n\r\n        this.makeVisible();\r\n        this.addClickListener();\r\n        \r\n        return (\r\n            <div id=\"lightbox-modal\" className=\"photo-modal\">\r\n                <div className=\"modal-content\">\r\n                    <center style={{verticalAlign: 'middle'}}><img id=\"modal-img\" src={thisImageSrc} alt=\"lightbox photo\"/>\r\n                    <div className=\"caption-container\">\r\n        <p id=\"caption\">{thisImageDesc}</p>\r\n                    </div></center>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/* eslint-disable */ \r\nimport React, { Component } from 'react';\r\nimport LightBoxModal from './LightBoxModal';\r\nimport images from './Images'\r\n\r\nexport default class Photos extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            activeImage: 'None',\r\n            imgClicked: false\r\n        }\r\n\r\n        this.changeActivePhoto = (imageName) => {\r\n            this.setState ({\r\n                activeImage: imageName,\r\n                imgClicked: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //load all images \r\n        const imageGallery = images.map((image, i) => (\r\n            <img key={i} onClick={this.changeActivePhoto.bind(this, image.title)} src={image.src}/>\r\n        ))\r\n\r\n        return (\r\n            <div id=\"main-body\">\r\n                <div id=\"photo-col\" className=\"photo-collection\">\r\n                    { imageGallery }\r\n                </div>\r\n\r\n               <LightBoxModal activeImage={this.state.activeImage} imgClicked={this.state.imgClicked}/>\r\n\r\n\t\t    </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class AnimationsTile extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"tile\">\r\n                <iframe className=\"tile__vid\" src={this.props.videoLink} width=\"400\" height=\"300\" frameBorder=\"0\" allowFullScreen></iframe>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/* eslint-disable */ \r\nimport React, { Component } from 'react'\r\nimport AnimationsTile from './AnimationsTile'\r\n\r\nexport default class Animations extends Component {\r\n    render() {\r\n        const videos = [\r\n            { link: \"https://www.youtube.com/embed/mxUWu3R1gfY\" },\r\n            { link: \"https://www.youtube.com/embed/-LTjw3PzcbM\" },\r\n            { link: \"https://www.youtube.com/embed/OSUInLwSLZk\" },\r\n            { link: \"https://www.youtube.com/embed/NDjoVprETPU\" },\r\n            { link: \"https://www.youtube.com/embed/WI5rnuVwPzM\" },\r\n            { link: \"https://www.youtube.com/embed/SA6i70dufHE\" },\r\n            { link: \"https://www.youtube.com/embed/t54evWM43tE\" },\r\n            { link: \"https://www.youtube.com/embed/IWK_Ahh6OSA\" }\r\n        ]\r\n\r\n        const videoTiles = videos.map((video, i) => (\r\n            <AnimationsTile key={i} videoLink={video.link}/>\r\n        ))\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"animations-desc\">\r\n                    <p>I used to make some dumb humor animations in high school so here's a video gallery of them. Scroll sideways (SHIFT+scroll) to see more! <br/><br/></p>\r\n                    \r\n                </div>\r\n                <center>\r\n                    <a href=\"https://www.youtube.com/user/tjtheturtleisawesome\" target=\"_blank\" className=\"tube-btn\">YouTube Channel: tjtheturtleisawesome</a>\r\n                </center>\r\n                \r\n                {/*Video slider CSS edited from https://codepen.io/netk/pen/ZpERkb*/}\r\n                <div className=\"contain_archive\">\r\n                    <div className=\"row_nm_videos\">\r\n                        <div className=\"row__inner\">\r\n                            {videoTiles}\r\n                        </div>\r\n                    </div>\r\n\t\t\t    </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class GameContent extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game-content\">\r\n\t\t\t\t<div className=\"game-section\">\r\n\t\t\t\t\t<div className=\"game-img-section\">\r\n                        <img className=\"game-img\" src={this.props.imageSrc} alt={this.props.alt}/>\r\n                    </div>\r\n                    <div className=\"game-content\">\r\n                        <h2>{this.props.header}</h2>\r\n                        <p>{this.props.desc}</p> \r\n                        <div>Hours: {this.props.hours}</div>\r\n                    </div> \r\n\t\t\t\t</div>\r\n\t\t\t\t<hr/>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport GameContent from './GameContent'\r\n\r\nexport default class Games extends Component {\r\n\t\r\n    render() {\r\n\t\tconst games = [\r\n\t\t\t{\r\n\t\t\t\timageSrcLink: \"/* image source: https://store.steampowered.com/app/440/Team_Fortress_2/ */\",\r\n\t\t\t\timageSrc: \"images/games/tf2.jpg\",\r\n\t\t\t\talt: \"tf2\",\r\n\t\t\t\theader: \"Team Fortress 2\",\r\n\t\t\t\tdesc: \"Really the first game I invested a lot of time in and made online friends in!\",\r\n\t\t\t\thours: \"717.0\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\timageSrcLink: \"/* image source: https://store.steampowered.com/app/444090/Paladins/ */\",\r\n\t\t\t\timageSrc: \"images/games/paladins.jpg\",\r\n\t\t\t\talt: \"paladins\",\r\n\t\t\t\theader: \"Paladins\",\r\n\t\t\t\tdesc: \"Overwatch but for poor people.\",\r\n\t\t\t\thours: \"107.0\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\timageSrcLink: \"/*image source: https://store.steampowered.com/app/322330/Dont_Starve_Together/*/\",\r\n\t\t\t\timageSrc: \"images/games/dontstarvetog.jpg\",\r\n\t\t\t\talt: \"dst\",\r\n\t\t\t\theader: \"Don't Starve Together\",\r\n\t\t\t\tdesc: \"Don't starve!\",\r\n\t\t\t\thours: \"71.0\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\timageSrcLink: \"/* image source: https://www.youtube.com/watch?v=kwoR1TKQF4Y */\",\r\n\t\t\t\timageSrc: \"images/games/osu.jpg\",\r\n\t\t\t\talt: \"osu\",\r\n\t\t\t\theader: \"Osu!\",\r\n\t\t\t\tdesc: \"Additing rhythm game...\",\r\n\t\t\t\thours: \"62.0\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\timageSrcLink: \"/* image source: https://store.steampowered.com/app/524220/NieRAutomata/ */\",\r\n\t\t\t\timageSrc: \"images/games/nier.jpg\",\r\n\t\t\t\talt: \"nier\",\r\n\t\t\t\theader: \"NieR:Automata\",\r\n\t\t\t\tdesc: \"My favorite game!\",\r\n\t\t\t\thours: \"39.0\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\timageSrcLink: \"/* image source: https://store.steampowered.com/app/291860/Pit_People/ */\",\r\n\t\t\t\timageSrc: \"images/games/pitpeople.jpg\",\r\n\t\t\t\talt: \"pitpeople\",\r\n\t\t\t\theader: \"Pit People\",\r\n\t\t\t\tdesc: \"Been playing this a lot! Love Behemoth games\",\r\n\t\t\t\thours: \"21.0\"\r\n\t\t\t},\r\n\t\t]\r\n\r\n\t\tconst gameContents = games.map((game, i) => (\r\n            <GameContent key={i} imageSrcLink={game.imageSrcLink} imageSrc={game.imageSrc} \r\n\t\t\talt={game.alt} header={game.header} desc={game.desc} hours={game.hours}/>\r\n\t\t))\r\n\t\t\r\n        return (\r\n            <div className=\"games-desc\">\r\n\t\t\t<p>\r\n\t\t\t\tTop games I've spent a lot of time playing <br/><br/>\r\n\t\t\t</p>\r\n\t\t\t{gameContents}\r\n\t\t</div>\r\n        )\r\n    }\r\n}\r\n","const config = {\r\n    apiKey: \"AIzaSyB7ebWonRK60V2IM4_6nGxQTQyIHMjvdcU\",\r\n    authDomain: \"cs185site.firebaseapp.com\",\r\n    databaseURL: \"https://cs185site.firebaseio.com\",\r\n}\r\nexport default config;","import React, { Component } from 'react'\r\n\r\nexport default class Message extends Component {\r\n    getId() {\r\n        if (this.props.animated) {\r\n            return \"firstMsg\"\r\n        }\r\n        else return \"notFirst\"\r\n    }\r\n\r\n    render() {\r\n        var msgDateTime = new Date(this.props.msgDateTime);\r\n        msgDateTime = msgDateTime.toString();\r\n        var msgDateTimeArr = msgDateTime.split(\" \");\r\n        //we only want date time and timezone displayed\r\n        msgDateTime = msgDateTimeArr[1] + \" \" + msgDateTimeArr[2] + \" \" \r\n        + msgDateTimeArr[3] + \" \" + msgDateTimeArr[4] + \" \" + msgDateTimeArr[5];\r\n\r\n        const msgName = this.props.msgName;\r\n        var initialsArr = msgName.split(\" \");\r\n        var initials;\r\n        if (initialsArr.length === 1) {\r\n            initials = initialsArr[0].charAt(0).toUpperCase();\r\n        }\r\n        else {\r\n            initials = initialsArr[0].charAt(0).toUpperCase() + initialsArr[1].charAt(0).toUpperCase();\r\n        }\r\n\r\n        const msgDesc = this.props.msgDesc;\r\n        const msgText = this.props.msgText;\r\n\r\n        //random color for avatar\r\n        const avatarColor = this.props.avatarColor;\r\n\r\n        return (\r\n            <div className=\"msg\" id={this.getId()}>\r\n                    <div className=\"msg-left-div\"><div className=\"msg-avatar\" style={{backgroundColor: avatarColor}}>{initials}</div></div>\r\n                    <div className=\"msg-right-div\">\r\n                        <span className=\"msg-date-time\">{msgDateTime}</span><br/>\r\n                        <span className=\"msg-name\">{msgName}</span>\r\n                        <span className=\"msg-desc\">{msgDesc}</span> <br/>\r\n                        <span className=\"msg-text\">{msgText}</span>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport config from '../config';\r\nconst firebase = require('firebase')\r\n\r\nexport default class GuestBookForm extends Component {\r\n    //Add a state\r\n    constructor() {\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            firebaseData: {},\r\n            formErrorName: null,\r\n            formErrorMsg: null,\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        //Check for input requirements\r\n        const data = new FormData(event.target);\r\n\r\n        console.log(\"form data\")\r\n        console.log(data);\r\n\r\n        var formJson = {};\r\n        data.forEach(function(value, key){\r\n            formJson[key] = value;\r\n        });\r\n\r\n        console.log(\"form json\");\r\n        console.log(formJson);\r\n\r\n        var setError = false\r\n        if (formJson[\"name\"].length <= 5 || formJson[\"name\"].length >= 20) {\r\n            this.setState({formErrorName: \"Name must be 6-19 characters\"})\r\n            setError = true;\r\n        }\r\n        else {\r\n            this.setState({formErrorName: null})\r\n        }\r\n        if (formJson[\"message\"].length <= 15 || formJson[\"name\"].length >= 500) {\r\n            this.setState({formErrorMsg: \"Message must be 16-499 characters\"})\r\n            setError = true;\r\n        }\r\n        else {\r\n            this.setState({formErrorMsg: null})\r\n        }\r\n\r\n        //if no errors raised\r\n        console.log(\" form errors\")\r\n        console.log(this.state.formErrorName)\r\n        console.log(this.state.formErrorMsg)\r\n        if (!setError) {\r\n\r\n            formJson[\"datetime\"] = firebase.database.ServerValue.TIMESTAMP;\r\n\r\n            //submit data to firebase\r\n            firebase.database().ref('guestBookData').push().set(formJson);\r\n            alert(\"Your message was sent!\")\r\n        }\r\n        else {\r\n            alert(\"There are issues with your submission. Please check the red text on the form.\")\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n        } \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <span className=\"form-title\">Leave a Message!</span>\r\n                <span className=\"form-error\" id=\"form-error\">{this.state.formErrorName}<br/>{this.state.formErrorMsg}</span>\r\n                \r\n                <div className=\"form-input-field\">\r\n                    <label className=\"form-label\" for=\"form-name\">Your name:</label><br/>\r\n                    <input type=\"text\" id=\"form-name\" name=\"name\" placeholder=\"Enter your name\" maxLength=\"19\" required/>\r\n                </div>\r\n                <div className=\"form-input-field\">                   \r\n                    <label className=\"form-label\" for=\"form-desc\">Description (optional):</label><br/>\r\n                    <input type=\"text\" id=\"form-desc\" name=\"desc\" placeholder=\"Offer a short description of yourself\" maxLength=\"99\"/>\r\n                </div> \r\n                <div className=\"form-input-field\">\r\n                    <label className=\"form-label\" for=\"form-message\">Message:</label><br/>\r\n                    <input type=\"text\" id=\"form-message\" name=\"message\" placeholder=\"Enter your message\" maxLength=\"499\" required/>\r\n                </div>   \r\n                <div className=\"form-input-field\">\r\n                    <span className=\"form-label\">Would you like your message to be publicly viewable? </span><br/>\r\n                    <div className=\"form-radio-btns\">\r\n                        <label for=\"yes\">\r\n                            <input type=\"radio\" id=\"form-viewable\" name=\"viewable\" value=\"yes\" required/>\r\n                            Yes</label>\r\n                        <label for=\"no\">\r\n                            <input type=\"radio\" id=\"form-viewable\" name=\"viewable\" value=\"no\"/>\r\n                            No\r\n                        </label>\r\n                    </div>\r\n                </div> \r\n                <div className=\"form-input-field\">\r\n                    <label className=\"form-label\" for=\"form-email\">Leave your email (optional):</label><br/>\r\n                    <input type=\"email\" id=\"form-email\" name=\"email\" placeholder=\"Enter your email\"/>\r\n                </div>\r\n                    <center><button className=\"form-submit\">Submit</button></center>\r\n            \r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport config from '../config';\r\nimport Message from './Message';\r\nimport GuestBookForm from './GuestBookForm';\r\nimport 'animate.css/animate.css'\r\nconst firebase = require('firebase')\r\n\r\nexport default class GuestBook extends Component {\r\n    //Add a state\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        firebaseData: {},\r\n        firstRender: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n        } \r\n        //load and update data \r\n        let ref = firebase.database().ref('guestBookData')\r\n        ref.on('value', snapshot => {\r\n            const data = snapshot.val()\r\n            this.setState({firebaseData: data})\r\n            console.log(\"updated firebase state\")\r\n            if (!this.state.firstRender) {\r\n                this.addAnimation();\r\n            }\r\n            else {\r\n                this.setState ({ firstRender: false })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    addAnimation() {\r\n        var message = document.getElementById(\"firstMsg\");\r\n        console.log(\"running\");\r\n        if (message) {\r\n            message.classList.add(\"animated\");\r\n            message.classList.add(\"bounceIn\");\r\n\r\n            setTimeout(function(){ \r\n                message.classList.remove(\"animated\");\r\n                message.classList.remove(\"bounceIn\");\r\n            }, 2000);\r\n        } \r\n    }\r\n\r\n    render() {\r\n        const data = this.state.firebaseData;\r\n\r\n        var msgArr = [];\r\n        Object.keys(data).forEach(function(key) {\r\n            if (data[key].viewable === \"yes\") {\r\n                msgArr.push(data[key]);\r\n            }\r\n        });\r\n        msgArr.reverse();\r\n\r\n\r\n        const renderedMsgs = msgArr.map((msg, i) => (\r\n            <Message key={msg.msgDateTime} avatarColor={'#'+Math.floor(Math.random()*16777215).toString(16)} msgDateTime={msg.datetime} msgName={msg.name} msgDesc={msg.desc} msgText={msg.message}></Message>\r\n        ));\r\n\r\n        if (renderedMsgs[0]) {\r\n            renderedMsgs[0] = React.cloneElement(\r\n                renderedMsgs[0], \r\n                { animated: true }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div id=\"main-body\">\r\n                <div className=\"contact-form animated fadeInLeft\">\r\n                    <GuestBookForm/>\r\n                </div>\r\n                <div className=\"guestbook-msgs\">\r\n                <div className=\"msg-box\">\r\n                    {renderedMsgs}\r\n                </div>\r\n                <div className=\"scroll-more\"><center><p>Scroll to view older messages</p></center> </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/* eslint-disable */ \r\nimport React, { Component } from 'react'\r\nimport config from '../config';\r\nconst firebase = require('firebase')\r\n\r\nexport default class MovieLightBoxModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setState({\r\n            allListNamesState: this.props.allListNames,\r\n            thisMovieLists: []\r\n        })\r\n    }\r\n\r\n\r\n    showDropdown() {\r\n        console.log(\"clicked\")\r\n        this.getThisMovieLists()\r\n        var dropdown = document.getElementById(\"listDropdown\");\r\n        if (dropdown.style.display === \"none\" || dropdown.style.display === \"\") {\r\n            dropdown.style.display = \"block\";\r\n        }\r\n        else {\r\n            dropdown.style.display = \"none\";\r\n        }\r\n    }\r\n    \r\n\r\n    deleteThisMovie() {\r\n        let thisMovieID = document.getElementById(\"modal-imdb\").innerHTML;\r\n        var ref = firebase.database().ref(\"movies/\" + thisMovieID);\r\n        console.log(\"deleting\")\r\n        \r\n        //remove from main movies list\r\n        ref.remove();\r\n\r\n        //remove from movieListPairs\r\n        var ref2 = firebase.database().ref(\"movieListPairs/\" + thisMovieID);\r\n        ref2.remove();\r\n\r\n        //remove from listMoviePairs\r\n        //Oof because need to iterate through all the pairs\r\n        const allLists = this.props.allListNames\r\n        for (let [key, value] of Object.entries(allLists)) {\r\n            var ref3 = firebase.database().ref(\"listMoviePairs/\"+key)\r\n            ref3.once('value', snapshot => {\r\n                const data = snapshot.val()\r\n                if (data !== null && thisMovieID in data) {\r\n                    // in it, we wanna delete\r\n                    var ref3 = firebase.database().ref(\"listMoviePairs/\"+key+\"/\"+thisMovieID)\r\n                    ref3.remove();\r\n                    this.props.rerenderParentCallback(false);\r\n                    //console.log(data)\r\n                }\r\n            })\r\n        }\r\n\r\n        //Also close the modal\r\n        var modal = document.getElementById(\"movie-lightbox-modal\");\r\n        if (modal) {\r\n            modal.style.display = \"none\";\r\n            //re enable scrolling\r\n            window.onscroll = function() {}; \r\n        }\r\n        this.props.rerenderParentCallback(false);\r\n    }\r\n\r\n    getThisMovieLists() {\r\n        let thisMovieID = document.getElementById(\"modal-imdb\").innerHTML;\r\n        let query = firebase.database().ref('movieListPairs/'+thisMovieID)\r\n            query.once('value', snapshot => {\r\n                const data = snapshot.val()\r\n                if (data !== null) {\r\n                    const keys = Object.keys(data)\r\n                    console.log(keys)\r\n                    this.setState({ \r\n                        thisMovieLists: keys\r\n                    })\r\n                }\r\n                else {\r\n                    console.log(\"null\")\r\n                    this.setState({ \r\n                        thisMovieLists: []\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    \r\n    addToList(listID) {\r\n        let thisMovieID = document.getElementById(\"modal-imdb\").innerHTML;\r\n\r\n        // add to movielistpairs list\r\n        let toUpload2 = {}\r\n        toUpload2 = true\r\n        firebase.database().ref('movieListPairs/'+thisMovieID+'/'+listID).set(toUpload2)\r\n\r\n        // add to listmoviepairs list\r\n        let toUpload = {}\r\n        toUpload = true\r\n        firebase.database().ref('listMoviePairs/'+listID+'/'+thisMovieID).set(toUpload)\r\n\r\n        this.getThisMovieLists()\r\n    }\r\n\r\n    render() {\r\n        var listNamesRen = []\r\n        if (this.state) {\r\n            var inLists = this.state.thisMovieLists\r\n            const allLists = this.props.allListNames\r\n            var notInLists = []\r\n            for (let [key, value] of Object.entries(allLists)) {\r\n                if (!inLists.includes(key)) {\r\n                    // wanna add all the lists this movie is not in\r\n                    notInLists[key] = value\r\n                }\r\n            }\r\n\r\n            listNamesRen = notInLists.map((list, listID) => (\r\n                <a key={listID} onClick={() => {this.addToList(listID)}}>{list[\"title\"]}</a>\r\n            ))\r\n        }\r\n\r\n        return (\r\n            <div id=\"movie-lightbox-modal\" className=\"movie-modal\">\r\n                <div className=\"movie-modal-content\">\r\n                    <a id=\"modal-imdb\"></a>\r\n                    <img id=\"modal-img\" alt=\"lightbox photo\"/>\r\n                    <div className=\"movie-info-container\">\r\n                        <h2 id=\"movie-title\"></h2>\r\n                        <div className=\"movie-modal-ratings-container\">\r\n                            <div className=\"movie-modal-rating-rt\"> <a>Rotten 🍅 </a><a id=\"movie-rating-rt\"></a></div>\r\n                            <div className=\"movie-modal-rating\"> <a>Imdb Score </a><a id=\"movie-rating-imdb\"></a></div>\r\n                        </div>\r\n                        <p id=\"movie-plot\"></p>\r\n\r\n                        <div className=\"movie-modal-runtime\"><b>Runtime: </b><a id=\"movie-runtime\"></a> </div><br/>\r\n                        <b>Directed By: </b><a id=\"movie-director\"></a>\r\n\r\n                        <div className = \"movie-modal-bottom\">\r\n                            <button onClick={()=>{this.showDropdown()}} className=\"add-to-list-btn\">Add to list &#x25BC;</button>\r\n                            <div id=\"listDropdown\" className=\"add-to-list-cnt\">\r\n                                {listNamesRen}\r\n                            </div>\r\n                            <button onClick={()=>{this.deleteThisMovie()}} className=\"delete-movie-btn\">Delete Movie</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport config from '../config';\r\nconst firebase = require('firebase')\r\n\r\nexport default class Movie extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: 'None',\r\n            poster: 'None',\r\n            director: 'None',\r\n            ratingIMDb: 'None',\r\n            ratingRt: 'None',\r\n            plot: 'None',\r\n            runtime: 'None',\r\n            id: 'None',\r\n            moveLists: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n        } \r\n\r\n        //load data, dont care if it exists or not because make sure data inserted correctly and deleted correctly\r\n        let ref = firebase.database().ref('movies/'+this.props.movieID)\r\n        ref.on('value', snapshot => {\r\n            const data = snapshot.val()\r\n            if (data !== null ) {\r\n                var partOfLists = [];\r\n                if (data.movieLists !== null) {\r\n                    //part of some list\r\n                    partOfLists = data.movieLists\r\n                }\r\n                this.setState({\r\n                    title: data.Title,\r\n                    poster: data.Poster,\r\n                    director: data.Director,\r\n                    ratingIMDb: data.imdbRating,\r\n                    ratingRt: data.Ratings[1].Value,\r\n                    plot: data.Plot,\r\n                    runtime: data.Runtime,\r\n                    id: data.imdbID,\r\n                    movieLists: partOfLists\r\n                })\r\n            } \r\n            // else this movie was just deleted\r\n        })\r\n    }\r\n\r\n    wasClicked = () => {\r\n        //disable the scroll\r\n        // Get the current page scroll position \r\n        var scrollTop = window.pageYOffset || document.documentElement.scrollTop; \r\n        var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\r\n  \r\n        // if any scroll is attempted, set this to the previous value \r\n        window.onscroll = function() { \r\n            window.scrollTo(scrollLeft, scrollTop); \r\n        }; \r\n\r\n        var modal = document.getElementById(\"movie-lightbox-modal\");\r\n        modal.style.display = \"flex\";\r\n\r\n        //Load the values into the modal\r\n        var modalImg = document.getElementById(\"modal-img\");\r\n        modalImg.src = this.state.poster;\r\n\r\n        document.getElementById(\"movie-title\").innerHTML = this.state.title;\r\n        document.getElementById(\"movie-rating-imdb\").innerHTML = this.state.ratingIMDb;\r\n        document.getElementById(\"movie-rating-rt\").innerHTML = this.state.ratingRt;\r\n        document.getElementById(\"movie-plot\").innerHTML = this.state.plot;\r\n        document.getElementById(\"movie-director\").innerHTML = this.state.director;\r\n        document.getElementById(\"movie-runtime\").innerHTML = this.state.runtime;\r\n        document.getElementById(\"modal-imdb\").innerHTML = this.state.id;\r\n\r\n        //Add listener for clicking out of modal\r\n        if (modal) {\r\n            modal.addEventListener(\"click\", e=>{\r\n                if(e.target !== e.currentTarget)\r\n                    return;\r\n                document.getElementById(\"listDropdown\").style.display = \"none\"\r\n                modal.style.display = \"none\";\r\n                //re enable scrolling\r\n                window.onscroll = function() {}; \r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <img onClick={this.wasClicked} src={this.state.poster} alt=\"movie poster\"/>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport MovieLightBoxModal from './MovieLightBoxModal'\r\nimport Movie from './Movie'\r\nimport config from '../config';\r\nconst firebase = require('firebase')\r\n\r\nexport default class MovieList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            activeMovie: 'None',\r\n            movieClicked: false,\r\n            firebaseAllMovieData: [],\r\n            lastKeyLoaded: 'None',\r\n            page: 1,\r\n            numMovies: null,\r\n            firebaseListNames: {},\r\n            searchedKey: 'None',\r\n            currentList: 'All',\r\n            currentListName: 'All',\r\n            allListNamesMap: {}\r\n        }\r\n        this.rerenderParentCallback = this.rerenderParentCallback.bind(this);\r\n\r\n        this.changeActiveMovie = (movieName) => {\r\n            this.setState ({\r\n                activeMovie: movieName,\r\n                movieClicked: true\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"component updated\", this.state.numMovies)\r\n        if (this.state.numMovies != null) {\r\n            //check to see if need to have load more button shown or hidden\r\n            if (this.state.page*8 >= this.state.numMovies) {\r\n                //don't need to show load more\r\n                document.getElementById(\"loadMore\").style.display = 'none';\r\n            }\r\n            else {\r\n                document.getElementById(\"loadMore\").style.display = 'block';\r\n            }\r\n        }\r\n        \r\n        if (this.state.searchedKey != 'None') {\r\n            document.getElementById(\"loadMore\").style.display = 'none';\r\n        } \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n        } \r\n        let ref1 = firebase.database().ref('movies')\r\n        ref1.once('value', snapshot => {\r\n            //num movies for all page for first load\r\n            this.setState({\r\n                numMovies: snapshot.numChildren()\r\n            })\r\n        })\r\n\r\n        //load and update data only first 8\r\n        let ref = firebase.database().ref('movies').orderByKey().limitToFirst(8)\r\n        ref.once('value', snapshot => {\r\n            const data = snapshot.val()\r\n            \r\n            const keys = Object.keys(data)\r\n\r\n            this.setState({\r\n                firebaseAllMovieData: keys,\r\n                lastKeyLoaded: keys[keys.length-1],\r\n                page: 1\r\n            })\r\n        })\r\n\r\n        //load list names\r\n        let ref2 = firebase.database().ref('movieLists')\r\n        ref2.orderByChild('title').once('value', snapshot => {\r\n            const data = snapshot.val()\r\n            \r\n            //const inside = Object.values(data)\r\n            const keys = Object.keys(data)\r\n            var result  = []\r\n\r\n            for(var x = 0; x < keys.length; x++) {\r\n                result[keys[x]] = data[keys[x]].title\r\n            }\r\n            this.setState({\r\n                firebaseListNames: result,\r\n                allListNamesMap: data\r\n            })\r\n        })\r\n    }\r\n\r\n    rerenderParentCallback (forceAll) {\r\n        console.log(\"forced update\")\r\n        //Because something got deleted, need to rerun the movielist.\r\n        \r\n        if (this.state.currentList === \"All\" || forceAll === true) {\r\n            var innertext = document.getElementById(\"movie-list\")\r\n            if (innertext.innerHTML === \"<center><p>This list is empty :O</p></center>\") {\r\n                innertext.innerHTML = null\r\n            }\r\n            let ref1 = firebase.database().ref('movies')\r\n            ref1.once('value', snapshot => {\r\n                //const data = snapshot.numChildren()\r\n                this.setState({\r\n                    numMovies: snapshot.numChildren()\r\n                })\r\n                \r\n            })\r\n\r\n            //load and update data only first 8\r\n            let ref = firebase.database().ref('movies').orderByKey().limitToFirst(8)\r\n            ref.once('value', snapshot => {\r\n                const data = snapshot.val()\r\n                \r\n                const keys = Object.keys(data)\r\n\r\n                this.setState({\r\n                    firebaseAllMovieData: keys,\r\n                    lastKeyLoaded: keys[keys.length-1],\r\n                    page: 1\r\n                })\r\n            })\r\n        }\r\n        else {\r\n            //forced update for list, kinda reused code which is bad but it is working.\r\n            let query = firebase.database().ref('listMoviePairs/'+this.state.currentList).orderByKey().limitToFirst(8)\r\n            query.once('value', snapshot => {\r\n                const data = snapshot.val()\r\n                //If the list is empty\r\n                if (data === null) {\r\n                    this.setState({\r\n                        numMovies: 0,\r\n                        firebaseAllMovieData: [],\r\n                        lastKeyLoaded: 'None',\r\n                        page: 1\r\n                    })\r\n                    document.getElementById(\"movie-list\").innerHTML = \"<center><p>This list is empty :O</p></center>\"\r\n                }\r\n                else {\r\n                    var innertext = document.getElementById(\"movie-list\")\r\n                    if (innertext.innerHTML === \"<center><p>This list is empty :O</p></center>\") {\r\n                        innertext.innerHTML = null\r\n                    }\r\n                    const keys = Object.keys(data)\r\n                \r\n                    //Also do a load for the load more button\r\n                    let ref1 = firebase.database().ref('listMoviePairs/'+this.state.currentList)\r\n                    ref1.once('value', snapshot => {\r\n                        this.setState({\r\n                            numMovies: snapshot.numChildren()\r\n                        })\r\n                    })\r\n                    this.setState({\r\n                        firebaseAllMovieData: keys,\r\n                        lastKeyLoaded: keys[keys.length-1],\r\n                        page: 1,\r\n                    })\r\n                }\r\n            })\r\n\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    showDropdown() {\r\n        var dropdown = document.getElementById(\"movieDropDown\");\r\n        if (dropdown.style.display === \"none\" || dropdown.style.display === \"\") {\r\n            dropdown.style.display = \"block\";\r\n        }\r\n        else {\r\n            dropdown.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    getDropdownLists() {\r\n        const listNames = this.state.firebaseListNames;\r\n        if (Object.keys(listNames).length != 0) {\r\n            const listNamesRen = listNames.map((list, index) => (\r\n                <a onClick={() => {this.changeList(index)}}>{list}</a>\r\n            ))\r\n            listNamesRen.unshift(<a onClick={() => {this.changeList(\"All\")}}>All</a>)\r\n            return listNamesRen\r\n        }\r\n    }\r\n\r\n    changeList(listID) {\r\n        //load and update data only first 8\r\n        document.getElementById(\"movieDropDown\").style.display = 'none';\r\n        const listNames = this.state.firebaseListNames;\r\n\r\n        if (listID === 'All') {\r\n            this.setState({\r\n                currentList: listID,\r\n                currentListName: 'All'\r\n            })\r\n            this.rerenderParentCallback(true)\r\n            //can do this because we were gonna run that same logic anyway\r\n        }\r\n        else {\r\n            let query = firebase.database().ref('listMoviePairs/'+listID).orderByKey().limitToFirst(8)\r\n            query.once('value', snapshot => {\r\n                const data = snapshot.val()\r\n\r\n                //If the list is empty\r\n                if (data === null) {\r\n                    this.setState({\r\n                        numMovies: 0,\r\n                        firebaseAllMovieData: [],\r\n                        lastKeyLoaded: 'None',\r\n                        page: 1,\r\n                        currentList: listID,\r\n                        currentListName: listNames[listID]\r\n                    })\r\n                    document.getElementById(\"movie-list\").innerHTML = \"<center><p>This list is empty :O</p></center>\"\r\n\r\n                }\r\n                else {\r\n                    var innertext = document.getElementById(\"movie-list\")\r\n                    if (innertext.innerHTML === \"<center><p>This list is empty :O</p></center>\") {\r\n                        innertext.innerHTML = null\r\n                    }\r\n                    const keys = Object.keys(data)\r\n                \r\n                    //Also do a load for the load more button\r\n                    let ref1 = firebase.database().ref('listMoviePairs/'+listID)\r\n                    ref1.once('value', snapshot => {\r\n                        this.setState({\r\n                            numMovies: snapshot.numChildren()\r\n                        })\r\n                    })\r\n                    \r\n                    console.log(\"new list loaded\" + keys)\r\n                    this.setState({\r\n                        firebaseAllMovieData: keys,\r\n                        lastKeyLoaded: keys[keys.length-1],\r\n                        page: 1,\r\n                        currentList: listID,\r\n                        currentListName: listNames[listID]\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    searchMovies() {\r\n        var searchBtn = document.getElementById(\"searchMovieBtn\")\r\n        if (searchBtn.innerHTML === \"Clear\") {\r\n            document.getElementById(\"movieSearch\").value = \"\";\r\n            document.getElementById(\"search-small-txt\").style.display = \"none\";\r\n            searchBtn.innerHTML = \"Search\"\r\n            this.setState({\r\n                searchedKey: 'None'\r\n            })\r\n        }\r\n        else {\r\n            var searchInput = document.getElementById(\"movieSearch\").value;\r\n            var found = false\r\n            let ref = firebase.database().ref('movies')\r\n            ref.once('value', snapshot => {\r\n                const data = snapshot.val()\r\n\r\n                for (let [key, value] of Object.entries(data)) {\r\n                    if (value[\"Title\"].toLowerCase() === searchInput.toLowerCase()) {\r\n                        found = true\r\n                        \r\n                        this.setState({\r\n                            searchedKey: key\r\n                        })\r\n                    }\r\n\r\n                }\r\n                if (found == false) {\r\n                    document.getElementById(\"search-small-txt\").style.display = \"block\"\r\n                }\r\n                else {\r\n                    document.getElementById(\"search-small-txt\").style.display = \"none\"\r\n                }\r\n                document.getElementById(\"searchMovieBtn\").innerHTML = \"Clear\"\r\n            })\r\n        }\r\n    }\r\n\r\n    getAllMovieIDs() {\r\n        return this.state.firebaseAllMovieData\r\n    }\r\n\r\n    loadMovies () {\r\n        console.log(\"load movies called\")\r\n        if (this.state.searchedKey != 'None') {\r\n            return <Movie handleClick={this.changeActiveMovie.bind(this)} movieID={this.state.searchedKey}></Movie>\r\n        }\r\n        else {\r\n            const movies = this.getAllMovieIDs();\r\n            \r\n            const movieList = movies.map ((movie) => (\r\n                <Movie handleClick={this.changeActiveMovie.bind(this)} key={movie} movieID={movie}></Movie>\r\n            ));\r\n            return movieList\r\n        }\r\n    }\r\n\r\n    loadMore() {\r\n        var currPage = this.state.page\r\n        currPage = currPage+1\r\n\r\n        //load more\r\n        var numLimit = 9 //9 because it starts from last key \r\n        var start = (this.state.lastKeyLoaded)\r\n\r\n        var pastFireBaseData = this.state.firebaseAllMovieData //array of keys\r\n\r\n        if (this.state.currentList === 'All') {\r\n            let ref = firebase.database().ref('movies').orderByKey().limitToFirst(numLimit).startAt(start);\r\n            ref.once('value', snapshot => {\r\n                const data = snapshot.val()\r\n                \r\n                const keys = Object.keys(data)\r\n\r\n                var newFireBaseData = pastFireBaseData\r\n                for (let key of Object.keys(data)) {\r\n                    if (!pastFireBaseData.includes(key)) {\r\n                        newFireBaseData.push(key)\r\n                    }\r\n                }\r\n\r\n                this.setState({\r\n                    firebaseAllMovieData: newFireBaseData,\r\n                    lastKeyLoaded: keys[keys.length-1],\r\n                    page: currPage\r\n                })\r\n            })\r\n        }\r\n        else {\r\n            //load more for list\r\n            let query = firebase.database().ref('listMoviePairs/'+this.state.currentList).orderByKey().limitToFirst(numLimit).startAt(start)\r\n            query.once('value', snapshot => {\r\n                const data = snapshot.val()\r\n                const keys = Object.keys(data)\r\n\r\n                var newFireBaseData = pastFireBaseData\r\n                for (let key of Object.keys(data)) {\r\n                    if (!pastFireBaseData.includes(key)) {\r\n                        newFireBaseData.push(key)\r\n                    }\r\n                }\r\n                \r\n                this.setState({\r\n                    firebaseAllMovieData: newFireBaseData,\r\n                    lastKeyLoaded: keys[keys.length-1],\r\n                    page: currPage\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"movie-list-container\">\r\n                <div className=\"movie-list-top\"> \r\n                    <div className = \"movie-list-dropdown\">\r\n                        <button onClick={()=>{this.showDropdown()}} className=\"movie-list-dropdown-btn\">{this.state.currentListName} &#x25BC;</button>\r\n                        <div id=\"movieDropDown\" className=\"movie-list-dropdown-cnt\">\r\n                            {this.getDropdownLists()}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"movie-list-search\">\r\n                        <input className=\"movie-list-search-box\" type=\"text\" id=\"movieSearch\" name=\"movieSearch\" placeholder=\"Movie Title\"/>\r\n                        <button id=\"searchMovieBtn\" onClick={() => {this.searchMovies()}} className=\"movie-list-search-btn\">Search</button>\r\n                        <p className=\"small-txt-search\" id=\"search-small-txt\">Not found.</p>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <br/>\r\n                <div id=\"movie-list\" className=\"movie-list\">\r\n                    {this.loadMovies()}\r\n                </div>\r\n                <center><button id=\"loadMore\" onClick={this.loadMore.bind(this)} className=\"movie-list-load-more\">Load More</button></center>\r\n\r\n               <MovieLightBoxModal rerenderParentCallback={this.rerenderParentCallback} allListNames={this.state.allListNamesMap}/>\r\n\r\n\t\t    </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport config from '../config';\r\nconst firebase = require('firebase')\r\n\r\nexport default class CreateList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            lastInsert: 0,\r\n            firebaseListNames: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n        } \r\n\r\n        //load list names\r\n        let ref2 = firebase.database().ref('movieLists')\r\n        ref2.orderByChild('title').once('value', snapshot => {\r\n            const data = snapshot.val()\r\n            const keys = Object.keys(data)\r\n            var result  = []\r\n\r\n            for(var x = 0; x < keys.length; x++) {\r\n                result[keys[x]] = data[keys[x]].title\r\n            }\r\n            this.setState({\r\n                firebaseListNames: result\r\n            })\r\n        })\r\n    }\r\n\r\n    createList () { \r\n        const inputData = document.getElementById(\"createList\").value;\r\n        var smoltxt = document.getElementById(\"smalltxt\")\r\n        const listNames = this.state.firebaseListNames\r\n\r\n        //search listnames\r\n        var found = false\r\n        for (var x = 0; x < listNames.length; x++) {\r\n            if (listNames[x] === inputData) {\r\n                found = true\r\n            }\r\n        }\r\n        \r\n        if (found) {\r\n            smoltxt.innerHTML = \"That list name has already been taken, please choose another one.\"\r\n            smoltxt.style.color = 'red'\r\n\r\n        } else {\r\n            smoltxt.style.color = 'rgb(155, 155, 155)'\r\n            // gets the latest entry\r\n            let ref = firebase.database().ref('movieLists')\r\n            ref.orderByKey().limitToLast(1).once('value', snapshot => {\r\n                const data = snapshot.val()\r\n                var listId = Object.keys(data)[0]\r\n                \r\n                listId = parseInt(listId) + 1\r\n                console.log(listId)\r\n                //upload result to firebase, will overwrite things\r\n                var toUpload = { \"title\": inputData}\r\n\r\n                firebase.database().ref('movieLists/'+listId).set(toUpload)\r\n                smoltxt.innerHTML = \"List Created!\"\r\n                setTimeout(function() {\r\n                    if (smoltxt != null){\r\n                        smoltxt.innerHTML = \"Please enter a title for the new movie list.\"\r\n                    }\r\n                }, 1000)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-create-body\">\r\n                <p>Create a new movie list to sort movies by.</p>\r\n                <div>\r\n                    <input className=\"text-input-box\" type=\"text\" id=\"createList\" name=\"createList\"  placeholder=\"List Name\"/>\r\n                    <button onClick={() => {this.createList()}}className=\"text-input-btn\">Create List</button>\r\n                    <p className=\"small-txt\" id=\"smalltxt\">Please enter a title for the new movie list.</p>\r\n                </div>\r\n\t\t    </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport config from '../config';\r\nconst firebase = require('firebase')\r\nconst axios = require('axios').default;\r\n\r\nexport default class AddMovie extends Component {\r\n    componentDidMount() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n        } \r\n    }\r\n\r\n    addMovieEvent () { \r\n        const inputData = document.getElementById(\"addMovieBox\").value;\r\n        console.log(inputData);\r\n\r\n        //Do axios req\r\n        axios.get('https://www.omdbapi.com/?apikey=d92ce2fd&i=' + inputData)\r\n        .then(function (response) {\r\n            //upload result to firebase, will overwrite things\r\n            var toUpload = response.data\r\n            firebase.database().ref('movies/'+response.data.imdbID).set(toUpload)\r\n            console.log(\"uploaded to firebase\")\r\n            document.getElementById(\"smalltxt\").innerHTML = \"Movie Added!\"\r\n            setTimeout(function() {\r\n                if (document.getElementById(\"smalltxt\") != null){\r\n                    document.getElementById(\"smalltxt\").innerHTML = \"Please give the imdbID of the movie from the imdb site.\"\r\n                }\r\n            }, 1000)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-create-body \">\r\n                <p>Adds a movie to the movie list!</p>\r\n                <div className=\"add-movie\">\r\n                    <input className=\"text-input-box\" type=\"text\" id=\"addMovieBox\" name=\"addMovieBox\" maxLength=\"10\" placeholder=\"Movie ImdbID\"/>\r\n                    <button onClick={() => {this.addMovieEvent()}} className=\"text-input-btn\">Add Movie</button>\r\n                    <p className=\"small-txt\" id=\"smalltxt\">Please give the imdbID of the movie from the imdb site.</p>\r\n                </div>\r\n\t\t    </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Home from './Home';\r\nimport Photos from './Photos';\r\nimport Animations from './Animations';\r\nimport Games from './Games';\r\nimport GuestBook from './GuestBook';\r\nimport MovieList from './MovieList';\r\nimport CreateList from './CreateList';\r\nimport AddMovie from './AddMovie';\r\n\r\nexport class Body extends Component {\r\n    displayContent = () => {\r\n        var activeTab = this.props.activeTab\r\n        if (activeTab === 'Home') {\r\n            return <Home/>\r\n        } else if (activeTab === 'Photos') {\r\n            return <Photos/>\r\n        } else if (activeTab === 'Animations') {\r\n            return <Animations/>\r\n        } else if (activeTab === 'Games'){\r\n            return <Games/>\r\n        } else if (activeTab === 'GuestBook'){\r\n            return <GuestBook/>\r\n        } else if (activeTab === 'Movie List') {\r\n            return <MovieList/>\r\n        } else if (activeTab === 'Add Movie') {\r\n            return <AddMovie/>\r\n        } else  {\r\n            return <CreateList/>\r\n        }\r\n    }\r\n    render() {\r\n        return ( \r\n            this.displayContent() );\r\n    }\r\n}\r\n\r\nexport default Body;\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport TabList from './components/TabList';\nimport Body from './components/Body';\n\nexport class App extends Component {\n  //Add a state\n  constructor() {\n    super();\n    this.state = {\n      activeTab: 'Home'\n    }\n    this.changePage = (title) => {\n      this.setState ({\n        activeTab: title\n      })\n    }\n  }\n\n  displayTitle = () => {\n    var activeTab = this.state.activeTab\n    if (activeTab === 'Home') {\n      return \"Jayleen's Portfolio\"\n    } else if (activeTab === 'Photos') {\n        return \"Photo Gallery\"\n    } else if (activeTab === 'Animations') {\n        return \"Videos I Animated\"\n    } else if (activeTab === 'Games') {\n        return \"Games\"\n    } else if (activeTab === 'Guest Book') {\n        return \"Guest Book\"\n    } else if (activeTab === 'Movie List') {\n      return \"Movie List\"\n    } else if (activeTab === 'Add Movie') {\n      return \"Add Movie\"\n    } else {\n      return \"Create List\"\n    }\n  }\n\n  toTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n  \n  render() {\n    const pages = [\n      { id: 1, title: \"Home\" },\n      { id: 2, title: \"Photos\" },\n      { id: 3, title: \"Animations\" },\n      { id: 4, title: \"Games\" },\n      { id: 5, title: \"GuestBook\" },\n      { id: 6, title: \"Movie List\" },\n      { id: 7, title: \"Add Movie\" },\n      { id: 8, title: \"Create List\" }\n    ];\n\n    return (\n      <div>\n        <div className=\"nav-bar\">\n          <TabList pages={pages} \n          changePage={this.changePage} \n          activeTab={this.state.activeTab}/>\n        </div>\n        <div className=\"page\">\n          <div><h1>{this.displayTitle()}</h1><hr/></div>\n          <Body activeTab={this.state.activeTab}/>\n        </div>\n        <div>\n\t\t      <button onClick={this.toTop.bind(this)} id=\"scroll-to-top\" className=\"top-btn\">Back to Top</button>\n\t      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}